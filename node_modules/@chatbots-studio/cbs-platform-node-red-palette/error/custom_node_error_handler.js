module.exports = (error, logger, node, msg) => {
  if (error.response) {
    // The request was made and the server responded with a status code
    // that falls out of the range of 2xx

    logger.addParam('errorCode', error.response.status);
    logger.addParam('message', error.response.data.stack || error.response.data.message);

  } else if (error.request) {
    // The request was made but no response was received
    // `error.request` is an instance of XMLHttpRequest in the browser and an instance of
    // http.ClientRequest in node.js

    logger.addParam('message', `${logger.getParam('outUrl')} REFUSED TO CONNECT`);
  } else {
    // Something happened in setting up the request that triggered an Error

    logger.addParam('errorCode', 400);
    logger.addParam('message', error.message);
  }
  msg = { payload: logger.getFullLog() };
  logger.logError();

  if (!msg) {
    return;
  }
  const errorCode = logger.getParam('errorCode');

  if (errorCode >= 400 && errorCode <= 499) {
    node.send([null, msg]);
  } else {
    node.send([null, null, msg]);
  }
}
